// prisma/schema.prisma

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id              Int          @id @default(autoincrement())
  name            String
  email           String       @unique
  password        String?
  googleId        String?      @unique
  role            Role         @default(USER)
  managedBy       User?        @relation("UserManager", fields: [managedById], references: [id])
  managedById     Int?
  managedUsers    User[]       @relation("UserManager")
  projects        Project[]    @relation("ProjectUsers")
  managedProjects Project[]    @relation("ProjectManager")
  forms           Form[]       @relation("UserForms")
  submissions     Submission[]
  sessions        Session[]

  @@index([googleId])
}

model Project {
  id          Int      @id @default(autoincrement())
  name        String
  description String? // Optional field for project description
  users       User[]   @relation("ProjectUsers")
  manager     User?    @relation("ProjectManager", fields: [managerId], references: [id])
  managerId   Int?
  forms       Form[]   @relation("ProjectForm") // Adjust according to your schema setup
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Form {
  id          Int          @id @default(autoincrement())
  title       String
  description String?
  fields      Json? // Made optional
  token       String?      @unique
  project     Project?     @relation("ProjectForm", fields: [projectId], references: [id])
  user        User?        @relation("UserForms", fields: [userId], references: [id])
  userId      Int?
  submissions Submission[]
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  projectId   Int?
}

model Submission {
  id          Int      @id @default(autoincrement())
  formId      Int
  form        Form     @relation(fields: [formId], references: [id])
  data        Json? // Store submission data as a JSON object
  submittedAt DateTime @default(now())
  User        User?    @relation(fields: [userId], references: [id])
  userId      Int?
}

model Session {
  sid    String   @id @default(uuid())
  sess   Json
  expire DateTime
  User   User?    @relation(fields: [userId], references: [id])
  userId Int?

  @@index([expire])
  @@map("session")
}

enum Role {
  ADMIN
  MANAGER
  USER
}
