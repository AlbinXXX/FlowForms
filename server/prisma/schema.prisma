datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id              Int       @id @default(autoincrement())
  name            String
  email           String    @unique
  password        String?
  googleId        String?   @unique // Optional, unique ID for Google-authenticated users
  role            Role      @default(USER)
  managedBy       User?     @relation("UserManager", fields: [managedById], references: [id])
  managedById     Int?
  managedUsers    User[]    @relation("UserManager")
  projects        Project[] @relation("ProjectUsers")
  managedProjects Project[] @relation("ProjectManager") // User as project manager
  forms           Form[]    @relation("UserForms") // Forms created by the user
  sessions        Session[] // Relation to sessions

  @@index([googleId])
}

model Project {
  id        Int      @id @default(autoincrement())
  name      String
  form      Form?    @relation("ProjectForm", fields: [formId], references: [id]) // One-to-one relation with Form
  formId    Int?     @unique
  users     User[]   @relation("ProjectUsers")
  manager   User?    @relation("ProjectManager", fields: [managerId], references: [id]) // One-to-one relation with User (manager)
  managerId Int?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Form {
  id          Int      @id @default(autoincrement())
  title       String
  description String?
  project     Project? @relation("ProjectForm") // One-to-one relation with Project, no need for `fields` and `references` on both sides
  user        User?    @relation("UserForms", fields: [userId], references: [id]) // Relation to User for forms created by the user
  userId      Int?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Session {
  sid    String   @id @default(uuid())
  sess   Json
  expire DateTime
  User   User?    @relation(fields: [userId], references: [id])
  userId Int?

  @@index([expire])
  @@map("session") // Ensure Prisma maps this model to a lowercase table name
}

enum Role {
  ADMIN
  MANAGER
  USER
}
